dist: xenial

language: python

sudo: false

cache:
  directories:
    - $GDALINST
    - ~/.cache/pip

env:
  global:
    - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
    - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
    - GDALINST=$HOME/gdalinstall
    - GDALBUILD=$HOME/gdalbuild
    - PROJINST=$HOME/gdalinstall
    - PROJBUILD=$HOME/projbuild
  matrix:
    - GDALVERSION="2.3.3" PROJVERSION="4.9.3"
    - GDALVERSION="2.4.2" PROJVERSION="4.9.3"
    - GDALVERSION="3.0.1" PROJVERSION="6.1.1"
    - GDALVERSION="master" PROJVERSION="6.1.1"

matrix:
  allow_failures:
    - env: GDALVERSION="master" PROJVERSION="6.1.1"

addons:
  apt:
    packages:
    - libgdal-dev
    - libatlas-dev
    - libatlas-base-dev
    - gfortran
    - libsqlite3-dev
    - sqlite3

python:
  - "3.6"
  - "3.7"
  - "3.8"

before_install:
  - pip install -U pip
  - export PATH=$GDALINST/gdal-$GDALVERSION/bin:$GDALINST/proj-$PROJVERSION/bin:$PATH
  - export LD_LIBRARY_PATH=$GDALINST/gdal-$GDALVERSION/lib:$GDALINST/proj-$PROJVERSION/lib:$LD_LIBRARY_PATH
  - . ./scripts/travis_proj_install.sh
  - . ./scripts/travis_gdal_install.sh
  - export GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal
  - export PROJ_LIB=$GDALINST/gdal-$GDALVERSION/share/proj
  - gdal-config --version
  - python -m pip wheel -r requirements-dev.txt
  - python -m pip install -r requirements-dev.txt

install:
  - if [ "$GDALVERSION" = "master" ]; then echo "Using gdal master"; elif [ $(gdal-config --version) == "$GDALVERSION" ]; then echo "Using gdal $GDALVERSION"; else echo "NOT using gdal $GDALVERSION as expected; aborting"; exit 1; fi
  - "GDAL_CONFIG=$GDALINST/gdal-$GDALVERSION/bin/gdal-config python -m pip install --no-deps --force-reinstall --no-use-pep517 -e ."
  - fio --version
  - fio --gdal-version

script:
  - python -m pytest -m "not wheel" --cov fiona --cov-report term-missing

after_success:
  - coveralls || echo "!! intermittent coveralls failure"

before_cache:
  - if [ "$GDALVERSION" = "trunk" ]; then rm -rf $GDALINST/gdal-$GDALVERSION; fi
